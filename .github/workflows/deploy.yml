name: Deploy 2 Instances via SSH Password

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image for ARM64 and Export
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/arm64 \
            -t my-app-image \
            --output type=docker \
            .

      - name: Save Docker Image to Tarball
        run: docker save my-app-image -o my-app-image.tar

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Copy Files and Deploy Remotely
        run: |
          echo "[`date`] 📦 Copying Docker image to server"

          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no my-app-image.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/my-app-image.tar

          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd ~

            echo "[`date`] ✍️ Writing .env file"
            echo "NEXT_PUBLIC_MAPBOX_TOKEN=${NEXT_PUBLIC_MAPBOX_TOKEN}" > .env
            echo "REDIS_HOST=${REDIS_HOST}" >> .env
            echo "REDIS_PORT=${REDIS_PORT}" >> .env
            echo "REDIS_PASSWORD=${REDIS_PASSWORD}" >> .env

            echo "[`date`] 📦 Loading Docker image"
            docker load -i my-app-image.tar

            echo "[`date`] 🧹 Removing old containers"
            docker rm -f instance1a instance2a || true

            echo "[`date`] 🚀 Running new containers"
            for i in 1a 2a; do
              docker run -d \
                --name instance\$i \
                --env-file .env \
                --network coolify \
                my-app-image
            done

            echo "[`date`] ✅ Deployment complete"
          EOF
        env:
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}