name: Deploy Docker App with Shared Image and Secure .env

on:
  push:
    branches:
      - master  # Set to your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Show Connection Info
        run: echo "Deploying to ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image from repo
        run: docker build -t my-app-image .

      - name: Save Docker image as tarball
        run: docker save my-app-image -o my-app-image.tar

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Copy Docker image to remote server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" \
            scp -o StrictHostKeyChecking=no \
            my-app-image.tar \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/my-app-image.tar

      - name: Deploy containers on server with .env file
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'

              cd ~

              # ✅ Write .env securely from GitHub secrets
              echo "NEXT_PUBLIC_MAPBOX_TOKEN=${NEXT_PUBLIC_MAPBOX_TOKEN}" > .env
              echo "REDIS_HOST=${REDIS_HOST}" >> .env
              echo "REDIS_PORT=${REDIS_PORT}" >> .env
              echo "REDIS_PASSWORD=${REDIS_PASSWORD}" >> .env

              # ✅ Load Docker image
              docker load -i my-app-image.tar

              # ✅ Stop & remove existing containers
              for i in \$(seq 1 5); do
                docker rm -f instance\$i || true
              done

              # ✅ Start 5 instances with shared .env
              for i in \$(seq 1 5); do
                docker run -d \
                  --name instance\$i \
                  --network coolify \
                  --env-file .env \
                  my-app-image
              done
          EOF
        env:
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
