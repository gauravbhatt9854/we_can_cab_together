name: Docker Deploy with Internal Network

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t my-app-image .

      - name: Save Docker image as tarball
        run: docker save my-app-image -o my-app-image.tar

      - name: Copy Docker image to remote server
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no my-app-image.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/

      - name: Load and start 5 containers in 'coolify' network
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            docker load -i my-app-image.tar

            # Stop and remove existing containers
            for i in $(seq 1 5); do
              docker rm -f instance$i || true
            done

            # Run 5 containers attached to 'coolify' network
            for i in $(seq 1 5); do
              docker run -d \
                --name instance$i \
                --network coolify \
                my-app-image
            done
          EOF
